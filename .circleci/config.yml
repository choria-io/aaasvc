version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.13

    working_directory: /go/src/github.com/choria-io/aaasvc

    steps:
      - checkout
      - run: go get -u github.com/onsi/ginkgo/ginkgo
      - run: go mod download
      - run: go get -u honnef.co/go/tools/cmd/staticcheck
      - run: go get -u github.com/client9/misspell/cmd/misspell
      - run: go list ./...|xargs staticcheck
      - run: find . -type f -name "*.go" | grep -v "/vendor/" | xargs misspell -error -locale US
      - run: ginkgo -r -skipMeasurements
      - run: mkdir -p /tmp/workspace
      - run: cd .. ; tar -czf /tmp/workspace/aaasvc.tgz aaasvc
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - aaasvc.tgz

  build_el6_64bit_rpms: &pkg_build
    docker:
      - image: circleci/golang:1.13

    working_directory: /go/src/github.com/choria-io/aaasvc

    environment:
      PACKAGE: el6_64
      BUILD: foss
      BUILDER: choria/packager:el7-go1.13

    steps: &std_build_steps
      - setup_remote_docker

      - attach_workspace:
          at: /tmp/workspace

      - run: docker create -v /go -v /build/artifacts --name store alpine:3.4 /bin/true
      - run: cd .. ; tar -xzf /tmp/workspace/aaasvc.tgz

      - run: docker cp /go store:/

      - run: |
          VERSION="${CIRCLE_TAG}"

          if [ -z "${CIRCLE_TAG}" ]
          then
            VERSION=${CIRCLE_SHA1}

            if [ ! -z "${NIGHTLY}" ]
            then
              VERSION="0.99.0.$(date +'%Y%m%d')"
            fi
          fi

          docker run --volumes-from store --rm -e SOURCE_DIR=/go/src/github.com/choria-io/aaasvc -e SHA1=${CIRCLE_SHA1} -e BUILD=${BUILD} -e VERSION=${VERSION} -e ARTIFACTS=/build/artifacts -e PACKAGE=${PACKAGE} ${BUILDER}

      - run: |
          mkdir -p /tmp/workspace/artifacts/${BUILD}/${PACKAGE}
          for i in $(docker run --volumes-from store --rm ${BUILDER} ls /build/artifacts);do
            docker cp store:/build/artifacts/${i} /tmp/workspace/artifacts/${BUILD}/${PACKAGE}
          done
          ls -l /tmp/workspace/artifacts/${BUILD}/${PACKAGE}

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - artifacts

  build_el7_64bit_rpms:
    <<: *pkg_build
    environment:
      PACKAGE: el7_64
      BUILD: foss
      BUILDER: choria/packager:el7-go1.13

  gather_artifacts:
    docker:
      - image: circleci/golang:1.13

    steps:
      - attach_workspace:
          at: /tmp/workspace

      - store_artifacts:
          path: /tmp/workspace

  release_packagecloud:
    environment:
      REPO: release

    docker:
      - image: circleci/ruby

    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run: gem install package_cloud

      - run: |
          for d in 6 7
          do
            for i in $(find /tmp/workspace -name \*.el${d}.\*.rpm | grep -v src.rpm)
            do
              package_cloud push choria/${REPO}/el/${d} ${i}
            done
          done

workflows:
  version: 2

  test_and_ship:
    jobs:
      - test:
          filters:
            tags:
              only: /.+/

      - build_el6_64bit_rpms:
          requires:
            - test
          filters: &semver_only
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/

      - build_el7_64bit_rpms:
          requires:
            - test
          filters: *semver_only

      - gather_artifacts:
          requires:
            - build_el6_64bit_rpms
            - build_el7_64bit_rpms
          filters: *semver_only

      - release_hold:
          type: approval
          requires:
            - gather_artifacts
          filters: *semver_only

      - release_packagecloud:
          requires:
            - release_hold
          filters: *semver_only
